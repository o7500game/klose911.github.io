#+TITLE: ARP地址解析协议
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="css/main.css" />
#+HTML_LINK_UP: ip.html   
#+HTML_LINK_HOME: tii.html
#+OPTIONS: num:nil timestamp:nil  ^:nil *:nil


数据链路如以太网或令牌环网都有自己的寻址机制(常常为48bit地址)，这是使用数据链路的任何网络层都必须遵从的。一个网络如以太网可以同时被不同的网络层使用，例如一组使用TCP/IP协议的主机和另一组使用某种PC网络软件的主机可以共享相同的电缆

当一台主机把以太网数据帧发送到位于同一局域网上的另一台主机时，是根据48bit的以太网地址来确定目的接口的。设备驱动程序从不检查IP数据报中的目的IP地址

地址解析为这两种不同的地址形式提供映射：32bit的IP地址和数据链路层使用的任何类型的地址

本章及下一章要讨论的两种协议如下图所示：

#+ATTR_HTML: image :width 20% 
[[file:pic/arp_rarp.png]]

+ ARP: 地址解析协议，为IP地址到对应的硬件地址之间提供动态映射。之所以用动态这个词是因为这个过程是自动完成的，一般应用程序用户或系统管理员不必关心
+ RARP：逆地址解析协议，是被那些没有磁盘驱动器的系统使用（一般是无盘工作站或X终端），它需要系统管理员进行手工设置

* 地址解析协议

** 例子

任何时候敲入下面这个形式的命令：

#+BEGIN_SRC sh
  $ ftp bsdi 
#+END_SRC

都会进行以下这些步骤：
1. 应用程序FTP客户端调用函数gethostbyname(3)把主机名(bsdi)转换成32bit的IP地址。这个函数在DNS(域名系统)中称作解析器，这个转换过程或者使用DNS，或者在较小网络中使用一个静态的主机文件(/etc/hosts)
2. FTP客户端请求TCP用得到的IP地址建立连接
3. TCP发送一个连接请求分段到远端的主机，即用上述IP地址发送一份IP数据报
4. 如果目的主机在本地网络上（如以太网、令牌环网或点对点链接的另一端），那么IP数据报可以直接送到目的主机上。如果目的主机在一个远程网络上，那么就通过IP选路函数来确定位于本地网络上的下一站路由器地址，并让它转发IP数据报。在这两种情况下，IP数据报都是被送到位于本地网络上的一台主机或路由器
5. 假定是一个以太网，那么发送端主机必须把32bit的IP地址变换成48bit的以太网地址。从逻辑Internet地址到对应的物理硬件地址需要进行翻译。这就是ARP的功能。ARP本来是用于广播网络的，有许多主机或路由器连在同一个网络上
6. ARP发送一份称作ARP请求的以太网数据帧给以太网上的每个主机。这个过程称作广播，如图4-2中的虚线所示。ARP请求数据帧中包含目的主机的IP地址（主机名为bsdi），其意思是”如果你是这个IP地址的拥有者，请回答你的硬件地址“
7. 目的主机的ARP层收到这份广播报文后，识别出这是发送端在寻问它的IP地址，于是发送一个ARP应答。这个ARP应答包含IP地址及对应的硬件地址
8. 收到ARP应答后，使ARP进行请求—应答交换的IP数据报现在就可以传送了
9. 发送IP数据报到目的主机

这些步骤的序号如图4-2所示：

#+ATTR_HTML: image :width 70% 
[[file:pic/ftp-process.png]]

在ARP背后有一个基本概念，那就是网络接口有一个硬件地址（一个48bit的值，标识不同的以太网或令牌环网络接口）。在硬件层次上进行的数据帧交换必须有正确的接口地址。但是，TCP/IP有自己的地址：32bit的IP地址。知道主机的IP地址并不能让内核发送一帧数据给主机。内核（如以太网驱动程序）必须知道目的端的硬件地址才能发送数据。ARP的功能是在32bit的IP地址和采用不同网络技术的硬件地址之间提供动态映射

点对点链路不使用ARP。当设置这些链路时（一般在引导过程进行），必须告知内核链路每一端的IP地址。像以太网地址这样的硬件地址并不涉及 

** 高速缓存
ARP高效运行的关键是由于每个主机上都有一个ARP高速缓存。这个高速缓存存放了最近Internet地址到硬件地址之间的映射记录。高速缓存中每一项的生存时间一般为20分钟，起始时间从被创建时开始算起

可以用arp(8)命令来检查ARP高速缓存。参数-a的意思是显示高速缓存中所有的内容：

#+BEGIN_SRC sh
  $ sudo arp -a 

  ? (192.168.2.1) at b0:95:8e:23:f9:d1 [ether] on eth0
  ? (192.168.2.155) at b8:27:eb:43:67:94 [ether] on eth0
#+END_SRC

48bit的以太网地址用6个十六进制的数来表示，中间以冒号隔开

** 报文格式
在以太网上解析IP地址时，ARP请求和应答分组的格式如图4-3所示（ARP可以用于其他类型的网络，可以解析IP地址以外的地址。紧跟着帧类型字段的前四个字段指定了最后四个字段的类型和长度）：

#+ATTR_HTML: image :width 70% 
[[file:pic/arp-protocol.png]]

+ 以太网报头中的前两个字段是以太网的源地址和目的地址(6bit的硬件地址)。目的地址为全1的特殊地址是广播地址。电缆上的所有以太网接口都要接收广播的数据帧
+ 两个字节长的以太网帧类型表示后面数据的类型。对于ARP请求或应答来说，该字段的值为0x0806。

*** 硬件类型
硬件类型字段表示硬件地址的类型。它的值为1即表示以太网硬件地址

*** 协议类型
协议类型字段表示要映射的协议地址类型。它的值为0x0800即表示IP地址。它的值与包含IP数据报的以太网数据帧中的类型字段的值相同，这是有意设计的

*** 硬件地址长度
硬件地址长度，以字节为单位，对于以太网上IP地址的ARP请求或应答来说，它的值为6

*** 协议地址长度
协议地址长度，以字节为单位，对于以太网上IP地址的ARP请求或应答来说，它的值为4

*** op
操作字段指出四种操作类型：
+ 值为1：ARP请求
+ 值为2：ARP应答
+ 值为3：RARP请求
+ 值为4：RARP应答

这个字段必需的，因为ARP请求和ARP应答的帧类型字段值是相同的

*** 硬件地址和IP地址
+ 发送端的硬件地址：6bit以太网地址
+ 发送端的IP地址：4bit的IP地址
+ 目的端的硬件地址：6bit以太网地址
+ 目的端的IP地址：4bit的IP地址

对于一个ARP请求来说，除目的端硬件地址外的所有其他的字段都有填充值。当系统收到一份目的端为本机的ARP请求报文后，它就把硬件地址填进去，然后用两个目的端地址分别替换两个发送端地址，并把操作字段置为2，最后把它发送回去

*** arp例子
